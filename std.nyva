
fn free(ptr: GenericPtr) {
    @push(ptr);
    @inline("free");
    return;
}

// before use @push for all args to sprinf
fn sprintf(string: String) -> String {
    @push(string);
    @inline("sprintf");
    return;
}

fn here() -> String {
    @inline("here");
    @pop(pos);
    return pos;
}

fn error(here, prefix, msg: String, halt: bool) {
    @push(msg);
    @push(prefix);
    @push(here);
    sprintf("[%s %s] %s");
    @print();
    if (halt) {
        @inline("halt 1");
    }
}

fn ovm(query) {
    @push(query);
    @inline("ovm stack");
}

fn isWindows() {
    if (ovm("platform") == "window") {
        return 1;
    } else {
        return 0;
    }
}

fn isUnix() {
    if (isWindows() != 1) {
        return 1;
    } else {
        return 0;
    }
}

fn __entry() {
    @print(isUnix());
}

